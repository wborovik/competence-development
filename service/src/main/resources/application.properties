server.servlet.contextPath=/${SERVER_PATH:competence}
server.port=${SERVER_PORT:8882}

spring.sql.init.mode=always

# MySQL properties
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://${DB_URL:localhost:5432/competence}
spring.datasource.username=${DB_USERNAME:competence}
spring.datasource.password=${DB_PASSWORD:competence}

#JPA/Hibernate
spring.jpa.hibernate.ddl-auto=validate
spring.liquibase.change-log=classpath:db/db.changelog-master.xml
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=true
spring.jpa.defer-datasource-initialization=false

#Web
spring.mvc.hiddenmethod.filter.enabled=true

#Sheduler
app.scheduling.change-order-status.cron-expression=${APP_SCHEDULING_CHANGE_ORDER_STATUS_CRON_EXPRESSION:0 0/10 * * * ?}
orderSchedulerService.preparation.max-limit-per-request=${ORDER_CHANGES_MAX_LIMIT_PER_REQUEST:1000}

#Kafka
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=competence

order-status.producer.kafka.configMap.[key.serializer]=org.apache.kafka.common.serialization.StringSerializer
order-status.producer.kafka.configMap.[value.serializer]=org.apache.kafka.common.serialization.StringSerializer
order-status.producer.kafka.topic=OrderStatus
order-status.consumer.kafka.configMap.[key.deserializer]=org.apache.kafka.common.serialization.StringDeserializer
order-status.consumer.kafka.configMap.[value.deserializer]=org.apache.kafka.common.serialization.StringDeserializer
order-status.consumer.kafka.topic=OrderStatus
